@model Rental_Car.Models.tb_cars

@{
    ViewBag.Title = "Add Car";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<div class="container">
    <h2 class="text-center">Add Car</h2>

    @using (Html.BeginForm("AddCar", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.car_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.car_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.car_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.make, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.make, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.make, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" class="custom-file-input" id="customFile" name="customFile" onchange="ChangeShownImage(event)">
            @Html.ValidationMessageFor(model => model.picture, "", new { @class = "text-danger" })

            @if (TempData["error"] != null)
            {
                <div style="color: maroon;">@TempData["error"]</div>
            }

        </div>
    </div>
    <div>
        <img src="@Html.DisplayFor(model => model.picture)" style="max-height: 200px" id="shownImage" />
    </div>

    <script>
        function ChangeShownImage(event) {
            document.getElementById("shownImage").src = URL.createObjectURL(event.target.files[0]);
        }
    </script>


    <div class="form-group">
        @Html.LabelFor(model => model.rent_price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rent_price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rent_price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "CarsList")
    </div>
</div>
